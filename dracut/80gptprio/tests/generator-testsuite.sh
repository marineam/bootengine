#!/bin/bash

testdir=$(dirname "$0")
failed=0

run_test() {
    local cmdline="$1"
    local checkfunc="$2"
    local unitdir=$(mktemp -d)
    trap "rm -rf '${unitdir}'" EXIT

    echo "Starting test ${checkfunc}"
    export GPTPRIO_GENERATOR_CMDLINE="${cmdline}"
    if ! "${testdir}/../gptprio-generator" "${unitdir}"; then
        echo "FAILED ${checkfunc}"
        failed=$((failed + 1))
    elif ! "${checkfunc}" "${unitdir}"; then
        echo "FAILED ${checkfunc}"
        failed=$((failed + 1))
    else
        echo "PASSED ${checkfunc}"
    fi

    rm -rf "${unitdir}"
    trap - EXIT
}

test_disabled() {
    if [[ -e "$1"/* ]]; then
        echo "$1 not empty"
        return 1
    fi
}
run_test nothing test_disabled

DEVICE_A='dev-disk-by\x2dpartuuid-7130c94a\x2d213a\x2d4e5a\x2d8e26\x2d6cce9662f132.device'
DEVICE_B='dev-disk-by\x2dpartuuid-e03dd35c\x2d7c2d\x2d4a47\x2db3fe\x2d27f15780a57c.device'

check_device() {
    [[ $(readlink "$1/dracut-pre-mount.service.requires/$2") == "../$2" ]] || return 1
    diff -u "$1/${2}.d/gptprio.conf" - <<EOF
# Automatically generated by gptprio-generator
[Unit]
Before=dracut-pre-mount.service
EOF
    return $?
}

test_enabled() {
    check_device "$1" "${DEVICE_A}" || return 1
    check_device "$1" "${DEVICE_B}" || return 1
    return $?
}
run_test usr=gptprio: test_enabled

if [[ "${failed}" -ne 0 ]]; then
    echo "${failed} test(s) failed!"
    exit 1
fi
